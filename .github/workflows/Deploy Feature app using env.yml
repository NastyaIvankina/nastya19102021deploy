name: Deploy Feature App ENV

on: 
  workflow_dispatch:
    inputs:
      system:
        description: 'System ID (ISD, IST)'     
        required: true
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      api_endpoint: ${{ steps.setvars.outputs.api_endpoint }}
      cf_username: ${{ steps.setvars.outputs.cf_username }}
      cf_password: ${{ steps.setvars.outputs.cf_password }}
      cf_orgname: ${{ steps.setvars.outputs.cf_orgname }}
      cf_space: ${{ steps.setvars.outputs.cf_space }}

    steps:
      - name: Set environment variables
        id: setvars
        env: 
          API_ISD: ${{ secrets.CF_TRIAL_API }}
          ISD_USERNAME: ${{ secrets.SAP_TRIAL_CF_USERNAME }}
          ISD_PASSWORD: ${{ secrets.SAP_TRIAL_CF_PASSWORD }}
          ISD_ORGNAME: ${{ secrets.CF_TRIAL_ORGNAME }}
          ISD_SPACE: ${{ secrets.CF_TRIAL_SPACE }}
          API_IST: ${{ secrets.CF_IST_TRIAL_API }}
          IST_USERNAME: ${{ secrets.SAP_IST_TRIAL_CF_USERNAME }}
          IST_PASSWORD: ${{ secrets.SAP_IST_TRIAL_CF_PASSWORD }}
          IST_ORGNAME: ${{ secrets.CF_IST_TRIAL_ORGNAME }}
          IST_SPACE: ${{ secrets.CF_IST_TRIAL_SPACE }}
        run: |
          if [[ "${{ github.event.inputs.system == 'ISD' }}" ]]; then
            echo "::set-output name=api_endpoint::$API_ISD"
            echo "::set-output name=cf_username::$ISD_USERNAME"
            echo "::set-output name=cf_password::$ISD_PASSWORD"
            echo "::set-output name=cf_orgname::$ISD_ORGNAME"
            echo "::set-output name=cf_space::$ISD_SPACE"
          fi

          if [[ "${{ github.event.inputs.system == 'IST' }}" ]]; then
            echo "::set-output name=api_endpoint::$API_IST"
            echo "::set-output name=cf_username::$IST_USERNAME"
            echo "::set-output name=cf_password::$IST_PASSWORD"
            echo "::set-output name=cf_orgname::$IST_ORGNAME"
            echo "::set-output name=cf_space::$IST_SPACE"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: init
    # Build your app here
    steps: 
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Run NPM Install
        run: npm i
      - name: Install CF CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf7-cli
      - name: Install MTA
        run: |
            cf install-plugin -f multiapps
      - name: Run NPM Build
        run: npm run build
      - name: CF Login
        run: cf login -a ${{ needs.init.outputs.api_endpoint }} -u ${{ needs.init.outputs.cf_username }} -p ${{ needs.init.outputs.cf_password }} -o ${{ needs.init.outputs.cf_orgname }} -s ${{ needs.init.outputs.cf_space }}}
      - name: Deploy to CF
        run: cf deploy ./mta_archives/nastya19102021deploy_0.0.1.mtar
